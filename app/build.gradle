plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}

android {
    namespace 'com.yjkj.service_recoder'
    compileSdk Version.compileSdkVersion

    defaultConfig {
        multiDexEnabled true
        applicationId "com.yjkj.service_recoder"
        minSdk Version.minSdkVersion
        targetSdk Version.targetSdkVersion
        versionCode Version.versionCode
        versionName Version.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            storeFile file('../servicerecoder.jks')//签名文件路径
            storePassword "njyjkj"
            keyAlias "key0"
            keyPassword "njyjkj"
        }
        release {
            storeFile file('../servicerecoder.jks')//签名文件路径
            storePassword "njyjkj"
            keyAlias "key0"
            keyPassword "njyjkj"
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "service_recoder.apk"
                }
            }
        }
    }

    buildTypes {
        debug {
            //minifyEnabled true
            signingConfig signingConfigs.debug
        }

        release{
//            minifyEnabled true
//            shrinkResources true
            signingConfig signingConfigs.release
            //proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    dataBinding {
        enabled true
    }
    viewBinding {
        enabled = true
    }

    buildFeatures {
        viewBinding true
    }
}

dependencies {
    api(Android.multidex)
    api(Android.coreKtx)
    api(Android.appcompat)
    api(Android.constraintlayout)
    api(Android.material)
    api(Android.recyclerview)
    api(ThirdParty.glide.glide)
    api(ThirdParty.glide.transformations)
    implementation project(path: ':wheelview')
    implementation project(path: ':pickerview')

    kapt(ThirdParty.glide.kapt)
    api(ThirdParty.rxlifecycle.rxlifecycle)
    api(ThirdParty.rxlifecycle.components)
    api(ThirdParty.rxPermissions)
    api(ThirdParty.okhttp)
    api(ThirdParty.rxAndroid)
    api(ThirdParty.cookieJar)
    api(ThirdParty.eventBus)
    api(ThirdParty.retrofit.retrofit)
    api(ThirdParty.retrofit.scalars)
    api(ThirdParty.retrofit.gson)
    api(ThirdParty.retrofit.adapter)
    api(ThirdParty.utilcode)
    api(Android.navigation.fragmentKtx){
        exclude group: 'androidx.navigation', module: "navigation-fragment"
    }
    api(ThirdParty.easypermission)
    api(Android.navigation.uiKtx)
    api(Android.lifecycle.liveDataKtx)
    api(Android.lifecycle.viewModelKtx)
    api(Android.lifecycle.commonJava8)
    api(ThirdParty.smooth_navigation)
    api(ThirdParty.strict_databinding)
    api(ThirdParty.unpeek_livedata)
    api(Kotlin.coroutines.core)
    api(Kotlin.coroutines.android)
    api(ThirdParty.mmkv)
    api(ThirdParty.ratingBar)
    api(ThirdParty.immersionbar)
    api(ThirdParty.immersionbar_ktx)
    api(Kotlin.kotlin_stdlib_jdk8)
    api(ThirdParty.bindingCollectionAdapter.bindingCollectionAdapter)
    api(ThirdParty.bindingCollectionAdapter.bindinghCollectionAdapter_rv)
    api(ThirdParty.bindingCollectionAdapter.bindinghCollectionAdapter_vp)
    api(ThirdParty.dslTablayout)
    api(ThirdParty.dslVP2Delegate)
    api(ThirdParty.dialog.material_dialog)
    api(ThirdParty.circularprogressbar)
    api(ThirdParty.zxing.yipianfengye)
    api(ThirdParty.flexbox)

    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.30'
    implementation 'io.github.h07000223:flycoTabLayout:3.0.0'
    //图表
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
}